$(function(){
    var updatePreview=function(){
        if($("#auto_refresh").is(':checked')) {
            $('#preview')[0].src=window.octa.preview_url;
        }
    };

    updatePreview();

    var i = window.setInterval( function(){
        updatePreview();
    }, 10000 );

    var submitFormEvent;
    $('#post_content').bind('input propertychange', function() {
        if(!submitFormEvent) {
            console.log("schedule submit event");
            submitFormEvent=window.setInterval( function(){
                console.log("execute scheduled submit event");
                $('#post_form').submit();
            }, 10000 );
        }
    });

    $('#post_form').submit(function(event){
        // abort any pending request
        if (request) {
            request.abort();
        }

        // setup some local variables
        var $form = $(this);

        // let's select and cache all the fields
        var $inputs = $form.find("input, select, button, textarea");
        // serialize the data in the form
        var serializedData = $form.serialize();

        // let's disable the inputs for the duration of the ajax request
        $inputs.prop("disabled", true);

        // fire off the request to /form.php
        var request = $.ajax({
            url: window.octa.post_update_url,
            type: "put",
            data: serializedData
        });

        // callback handler that will be called on success
        request.done(function (response, textStatus, jqXHR){
            // log a message to the console
            console.log("Hooray, it worked!");
        });

        // callback handler that will be called on failure
        request.fail(function (jqXHR, textStatus, errorThrown){
            // log the error to the console
            console.error(
                "The following error occurred: "+
                    textStatus, errorThrown
            );
        });

        // callback handler that will be called regardless
        // if the request failed or succeeded
        request.always(function () {
            // reenable the inputs
            $inputs.prop("disabled", false);
        });

        // prevent default posting of form
        event.preventDefault();
    });
});